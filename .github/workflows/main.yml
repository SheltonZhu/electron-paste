# main.yml

# Workflow's name
name: Build Electron Paste For Win/Linux
# Workflow's trigger
on:
  push:
    # Sequence of patterns matched against refs/heads
#    branches:
      # Push events on main branch
#      - main
    tags:
      - v*.*.*

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron paste

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      matrix:
        os: [windows-2016, ubuntu-20.04]

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@master

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@master
        with:
          node-version: 14

      # step3: npm install build tools
      - name: npm install windows build tools
        if: matrix.os == 'windows-2016'
        run: |
          npm install --global --production windows-build-tools@4.0.0 && npm install node-gyp@latest && npm config set python python2.7 && npm config set msvs_version 2017

      - name: npm install linux build tools
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo apt install libxtst-dev libpng++-dev

      # step4: npm install
      - name: npm install
        run: |
          npm install

      # step5: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-2016'
        run: |
          npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build linux app
        if: matrix.os == 'ubuntu-20.04'
        run: |
          npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step6: cleanup artifacts in build
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-2016'
        run: |
          npx rimraf "build/builder-effective-config.yaml build/icons build/win-*unpacked"

      - name: cleanup artifacts for linux
        if: matrix.os == 'ubuntu-20.04'
        run: |
          npx rimraf "build/!(*.AppImage|*.deb|*.tar.gz|*.rpm)"

      # step7: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: build

      # step8: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "build/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
