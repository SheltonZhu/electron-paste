# main.yml

# Workflow's name
name: Build Electron Paste For Win/Linux
# Workflow's trigger
on:
  push:
    tags:
      - 'v*.*.*'

# Workflow's jobs
jobs:
  # job's id
  release:
    # job's name
    name: build and release electron paste

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-20.04 ]

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2-beta

      # step3: npm install
      - name: npm install
        run: |
          npm install

      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          npm run build
        env:
          GH_TOKEN: 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

      - name: build linux app
        if: matrix.os == 'ubuntu-20.04'
        run: |
          npm run build
        env:
          GH_TOKEN: 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

      # step5: cleanup artifacts in build
      - name: cleanup artifacts
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "build/!(*.exe|*.blockmap)"

      - name: cleanup artifacts
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "build/!(latest.yml|*.AppImage|*.deb|*.tar.gz)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: build

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "build/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
